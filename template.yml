AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: 'Webshop
  Sample SAM Template for webshop
'
Globals:
  Function:
    Timeout: 3
Resources:
  S3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: webshop-bucket
  ApiGatewayApi:
    Type: AWS::Serverless::Api
    Properties:
      Name: webshop
      StageName: Prod
      Cors:
        AllowMethods: "'POST, GET'"
        AllowHeaders: "'X-Forwarded-For'"
        AllowOrigin: "'www.example.com'"
        MaxAge: "'600'"
        AllowCredentials: True
  # This is a Lambda function config associated with the source code: get-all-items.js
  getYoutubeFeedFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: 'get-youtube-feed'
      Handler: src/lambda/get-youtube-feed/index.handler
      Runtime: nodejs12.x
      MemorySize: 128
      Timeout: 100
      Environment:
        Variables:
          YT_API_HOST: ''
          YT_API_KEY: ''
          YT_CHANNEL_ID: ''
      Events:
        Api:
          Type: Api
          Properties:
            Path: /youtube-feed
            Method: GET
            RestApiId:
              Ref: ApiGatewayApi
  getProductsFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: 'get-products'
      Handler: src/lambda/get-stripe-products/index.handler
      Runtime: nodejs12.x
      MemorySize: 128
      Timeout: 100
      Environment:
        Variables:
          STRIPE_API_HOST: ''
          STRIPE_API_KEY_TEST: ''
          STRIPE_API_SECRET_TEST: ''
      Events:
        Api:
          Type: Api
          Properties:
            Path: /products
            Method: GET
            RestApiId:
              Ref: ApiGatewayApi
  postEmailAccountCreatedFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: 'email-account-created'
      Handler: src/lambda/send-email-account-created/index.handler
      Runtime: nodejs12.x
      MemorySize: 128
      Timeout: 100
      Environment:
        Variables:
          TEST_TO_ADDRESS: ''
          TEST_SOURCE: ''
      Events:
        Api:
          Type: Api
          Properties:
            Path: /email-account-created
            Method: POST
            RestApiId:
              Ref: ApiGatewayApi
  postOrderFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: 'add-order'
      Handler: src/lambda/add-order/index.handler
      Runtime: nodejs12.x
      MemorySize: 128
      Timeout: 100
      Events:
        Api:
          Type: Api
          Properties:
            Path: /add-order
            Method: POST
            RestApiId:
              Ref: ApiGatewayApi
      Policies:
        # Give Create/Read/Update/Delete Permissions to the OrderTable
        - DynamoDBCrudPolicy:
            TableName: !Ref OrderTable
  OrderTable:
    Type: AWS::Serverless::SimpleTable
    Properties:
      TableName: Orders
      PrimaryKey:
        Name: id
        Type: String
      ProvisionedThroughput:
        ReadCapacityUnits: 2
        WriteCapacityUnits: 2